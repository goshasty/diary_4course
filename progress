Прочитал статьи по рекомендательным системам:

1. Боллее-менее классические методы коллаборативной фильтрации с реализацией:
LightFM - Latent Matrix Factorization, с возможностью использовать признаковое описание товаров и пользователей
ALS - примерно то же, но с некоторыми отличиями и обучается по-другому. Не поддерживает фичи

2. Интересные нейросетевые методы:
Review-based Explanations for Recommender Systems - используя отзывы и оценку, генерирует текстовое объяснение, 
почему пользователь поставил такую оценку. Интересная архитектура с LSTM и Attention

Neural Explainable Latent Factor Model for Recommender Systems - по матрице интеракций, 
контексту (признаковое описание пользователей), контенту (описание фичей) и отзывам получить рекомендацию и отзыв 
(для пары, которая еще не взаимодействовала)

Neural Latent Factor Model for Context-aware Recommender Systems - учитывая матрицу и время интеракции,
получить рекомендацию. Интересная идея строить эмбединги для пар товар-время, пользователь-время.

Convolutional Adversarial Latent Factor Model for Recommender System - предсказываем оценки по матрице интеракций. 
Применяется очень интеерсные методв обучения (я о нем раньше не слышал) - adversarial: 
соревнуются 2 модели генеративная (задает какое-то распределение на матрице интеракции) и дискриминативная 
(она использует разницу между сгенерированным распределением и настоящим и учится "в другую сторону")

Deep Social Collaborative Filtering - использует матрицу интеракции и социальную сеть (пользователи представлены в виде графа).
Очень интересная архитектура (с attention и random walk).


Collective Matrix Factorization for Top-N Recommendation - низкоранговое разложение. Поддерживает контекст 
(признаковое описание пользователей), контент (описание фичей), и матрица юзеры-фичи. Получаем эмбединги для каждого объекта 
(и пользователи, и товары, и контент, и контекст)

Social Influence-based Attentive Mavens Mining and Aggregative Representation Learning for Group Recommendation 

Markov Random Fields for Collaborative Filtering 

--------------------------------------------------


Выбрал направление работы: рекомендации на сетях.
Есть группы статей, где описываются 1)рекомендации на график друзей 
2) рекомендации для пользователей, которые объединены в группы. 

Моя идея состоит в том, чтобы построить некий ансамбль: 
С одной стороны использовать методы для рекомендаций с группами, с другой, методы, использующие граф связей. 
При этом многие датасеты размечены либо только на друзей, либо только на группы.
Больная часть работы будет состоять в том, чтобы на график друзей выделить скопления (группы), а в датасете
С группами построить граф друзей. В первом случае предполагается использовать результаты (и методы) моей курсовой работы, 
Во втором алгоритмы моделирования и построения графов. 

На данный момент обучается модель, реализованная в https://github.com/wenqifan03/GraphRec-WWW19
На датасете MovieLens_1M.
Обучается очень долго и не очень хорошо.
В качестве модели для рекомендаций на группах буду использовать данную реализацию: https://github.com/LianHaiMiao/Attentive-Group-Recommendation

----------------------------------------------------


Обучил обе модели на их собственнх данных (с боями). 
Групповой датасет (CAMRa2011) представляют из себя: пользователи,
оценки пользователь - товар
группы (id группы, id принадлежащих ей пользователей) и оценки группа - товар.
Предсказываем неизвестные рейтинги

Смоделиовал графовую структуру на этих данных (считаем, что все пользователи в группах связаны) и запустил графовую модель на этих данных
Получается, что ансамблирование 2 моделей (как ответ берем среднее арифметическое) дает качество намного лучше. 
Это основной результат

Написал предварительный текст работы (я его писал очень в спешке, поэтому он нескладный и плохой, но результаты представлены)

